
------------------------------------------------------------------------------------
--  SENG 5801 - HW6 - Formal Street Light Model (NuSMV)
------------------------------------------------------------------------------------

------------------------------------------------------------------------------------
--  Module: TrafficLight
--
--  This module responsible for managing state of a single light.
------------------------------------------------------------------------------------
MODULE TrafficLight(name, activeLight, otherLight, activeLight, pedestrianSignal)
  VAR
    currentState : {Red, Yellow, Green};
    greenTimer : 0..60;
    yellowTimer : 0..10;

  ASSIGN
    init(greenTimer) := 60;
    init(yellowTimer) := 10;

    -- 
    next(currentState) :=  
      case
        -- Always read until active
        activeLight != self                       : Red;

        -- 
        activeLight = self &
        greenTimer = 60                           : Green;

        activeLight = self &
        greenTimer = 0 &
        yellowTimer = 10                          : Yellow;

        activeLight = self 

        -- Default Case
        TRUE                                      : currentState;
      esac;

    next(greenTimer) :=
      case
        activeLight = FALSE                          : 60;

        greenTimer > 0 &
        currentState = Green                      : greenTimer - 1;

        greenTimer = 0                            : 60;

        TRUE                                      : greenTimer;
      esac;

    next(yellowTimer):=
      case
        activeLight

        yellowTimer > 0 &
        currentState = Yellow                     : yellowTimer - 1;

        yellowTimer = 0                           : 10;

        TRUE                                      : yellowTimer;
      esac;


------------------------------------------------------------------------------------
--  Module: Controller
--
--  This component is responsible for managing the somewhat "mutually exclusive"
--  traffic light state machines.  It keeps track of which traffic light is currently
--  active and priority of events.
------------------------------------------------------------------------------------
MODULE Controller(ewLight, nsLight)
  VAR
    activeLight : {ew, ns};
  ASSIGN
    next(activeLight) :=
      case
        ewLight = Green                           : ns;

        nsLight = Green                           : ew;

        TRUE: activeLight;
      esac;


------------------------------------------------------------------------------------
--  Module: Main
------------------------------------------------------------------------------------
MODULE main
  VAR

    -- East/West Signals
    ewPedestrianSignal : boolean;
    ewEmergencyVehicleSignal : boolean;
    ewLoopSignal : boolean;

    -- North/South Signals
    nsPedestrianSignal : boolean;
    nsEmergencyVehicleSignal : boolean;
    nsoopSignal : boolean;

    -- Components of system (modules)
    ewLight : TrafficLight(ew, nsLight.currentState, controller.activeLight, nsPedestrianSignal);
    nsLight : TrafficLight(ns, ewLight.currentState, controller.activeLight, ewPedestrianSignal);
    controller : Controller(ewLight.currentState, nsLight.currentState);

  ASSIGN
    init(ewLight.currentState) := Green;
    init(nsLight.currentState) := Red;


------------------------------------------------------------------------------------
--  Specifictations/Requirements
------------------------------------------------------------------------------------

--(RED)It's always the case that if one light is yellow, the next state will be Red
SPEC AG(nsLight.currentState=Yellow -> AX(ewLight.currentState=Red));
SPEC AG(ewLight.currentState=Yellow -> AX(nsLight.currentState=Red));
--(YELLOW)It's always the case that if the opposite light is yellow or green (or if the current light is yellow), the current lights next state will be Red
SPEC AG((nsLight.currentState=Yellow | nsLight.currentState=Green | ewLight.currentState=Yellow) -> AX(ewLight.currentState=Red));
SPEC AG((ewLight.currentState=Yellow | ewLight.currentState=Green | nsLight.currentState=Yellow) -> AX(nsLight.currentState=Red));
--(GREEN)It's always the case that if one light is red, the next state will be Green
SPEC AG( nsLight.currentState = Red -> EF(ewLight.currentState=Green));  
SPEC AG( ewLight.currentState = Red -> EF(nsLight.currentState=Green));  
--There can never  be Green lights for both ew and ns at the same time 
SPEC AG(nsLight.currentState=Green -> (ewLight.currentState=Red))
SPEC AG(nsLight.currentState=Yellow -> (ewLight.currentState=Red))
-- Proves that we stay green for some duration of time and do not immediately transistion every time.
SPEC AF((ewLight.currentState=Green ) -> EX(ewLight.currentState=Green) & EX(EX(ewLight.currentState=Green)) & EX(EX(EX(ewLight.currentState=Green))))
SPEC AF((nsLight.currentState=Green ) -> EX(nsLight.currentState=Green) & EX(EX(nsLight.currentState=Green)) & EX(EX(EX(nsLight.currentState=Green))))

-- LIVELINESS
SPEC AG(nsLight.currentState=Red -> AF(nsLight.currentState=Green))
SPEC AG(nsLight.currentState=Green -> AF(nsLight.currentState=Red))
SPEC AG(ewLight.currentState=Red -> AF(ewLight.currentState=Green))
SPEC AG(ewLight.currentState=Green -> AF(ewLight.currentState=Red))

-- SAFETY
-- -- The lights can never both be green
SPEC !AG(ewLight.currentState = Green & nsLight.currentState = Green)
-- -- Grandma has at least 3 seconds to cross
SPEC AF(nsPedestrianSignal=TRUE & nsLight.currentState=Red -> EX(nsLight.currentState=Green) & EX(EX(nsLight.currentState=Green)) & EX(EX(EX(nsLight.currentState=Green))))

-- The light will transition to yellow and eventually red if the perpendicular pedestian crosswalk button is pressed
SPEC AG( (ewPedestrianSignal=TRUE & nsLight.currentState=Green) -> AX(nsLight.currentState=Yellow));
SPEC AG( (nsPedestrianSignal=TRUE & ewLight.currentState=Green) -> AX(ewLight.currentState=Yellow));
SPEC AG( (ewPedestrianSignal=TRUE & nsLight.currentState=Green) -> AF(nsLight.currentState=Red));
SPEC AG( (nsPedestrianSignal=TRUE & ewLight.currentState=Green) -> AF(ewLight.currentState=Red));
